
package sv;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MetodosPrueba", targetNamespace = "http://sv/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MetodosPrueba {


    /**
     * 
     * @param usuario
     * @param contraseña
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://sv/", className = "sv.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://sv/", className = "sv.LoginResponse")
    @Action(input = "http://sv/MetodosPrueba/loginRequest", output = "http://sv/MetodosPrueba/loginResponse")
    public Boolean login(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "contrase\u00f1a", targetNamespace = "")
        String contraseña);

    /**
     * 
     * @param masa1
     * @param distancia
     * @param masa2
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "gravitacionuniversal", targetNamespace = "http://sv/", className = "sv.Gravitacionuniversal")
    @ResponseWrapper(localName = "gravitacionuniversalResponse", targetNamespace = "http://sv/", className = "sv.GravitacionuniversalResponse")
    @Action(input = "http://sv/MetodosPrueba/gravitacionuniversalRequest", output = "http://sv/MetodosPrueba/gravitacionuniversalResponse")
    public String gravitacionuniversal(
        @WebParam(name = "masa1", targetNamespace = "")
        double masa1,
        @WebParam(name = "masa2", targetNamespace = "")
        double masa2,
        @WebParam(name = "distancia", targetNamespace = "")
        double distancia);

    /**
     * 
     * @param angulo
     * @param velocidad
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "alturamaxima", targetNamespace = "http://sv/", className = "sv.Alturamaxima")
    @ResponseWrapper(localName = "alturamaximaResponse", targetNamespace = "http://sv/", className = "sv.AlturamaximaResponse")
    @Action(input = "http://sv/MetodosPrueba/alturamaximaRequest", output = "http://sv/MetodosPrueba/alturamaximaResponse")
    public String alturamaxima(
        @WebParam(name = "velocidad", targetNamespace = "")
        double velocidad,
        @WebParam(name = "angulo", targetNamespace = "")
        double angulo);

    /**
     * 
     * @param numero1
     * @param numero2
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "operaciones", targetNamespace = "http://sv/", className = "sv.Operaciones")
    @ResponseWrapper(localName = "operacionesResponse", targetNamespace = "http://sv/", className = "sv.OperacionesResponse")
    @Action(input = "http://sv/MetodosPrueba/operacionesRequest", output = "http://sv/MetodosPrueba/operacionesResponse")
    public String operaciones(
        @WebParam(name = "numero1", targetNamespace = "")
        double numero1,
        @WebParam(name = "numero2", targetNamespace = "")
        double numero2);

    /**
     * 
     * @param aceleracion
     * @param tiempo
     * @param velocidad
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "desplazamiento", targetNamespace = "http://sv/", className = "sv.Desplazamiento")
    @ResponseWrapper(localName = "desplazamientoResponse", targetNamespace = "http://sv/", className = "sv.DesplazamientoResponse")
    @Action(input = "http://sv/MetodosPrueba/desplazamientoRequest", output = "http://sv/MetodosPrueba/desplazamientoResponse")
    public String desplazamiento(
        @WebParam(name = "velocidad", targetNamespace = "")
        double velocidad,
        @WebParam(name = "tiempo", targetNamespace = "")
        double tiempo,
        @WebParam(name = "aceleracion", targetNamespace = "")
        double aceleracion);

    /**
     * 
     * @param numero
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "parimpar", targetNamespace = "http://sv/", className = "sv.Parimpar")
    @ResponseWrapper(localName = "parimparResponse", targetNamespace = "http://sv/", className = "sv.ParimparResponse")
    @Action(input = "http://sv/MetodosPrueba/parimparRequest", output = "http://sv/MetodosPrueba/parimparResponse")
    public String parimpar(
        @WebParam(name = "numero", targetNamespace = "")
        double numero);

    /**
     * 
     * @param palabra
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "diccionario", targetNamespace = "http://sv/", className = "sv.Diccionario")
    @ResponseWrapper(localName = "diccionarioResponse", targetNamespace = "http://sv/", className = "sv.DiccionarioResponse")
    @Action(input = "http://sv/MetodosPrueba/diccionarioRequest", output = "http://sv/MetodosPrueba/diccionarioResponse")
    public String diccionario(
        @WebParam(name = "palabra", targetNamespace = "")
        String palabra);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://sv/", className = "sv.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://sv/", className = "sv.HelloResponse")
    @Action(input = "http://sv/MetodosPrueba/helloRequest", output = "http://sv/MetodosPrueba/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param exponente
     * @param base
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "potencia", targetNamespace = "http://sv/", className = "sv.Potencia")
    @ResponseWrapper(localName = "potenciaResponse", targetNamespace = "http://sv/", className = "sv.PotenciaResponse")
    @Action(input = "http://sv/MetodosPrueba/potenciaRequest", output = "http://sv/MetodosPrueba/potenciaResponse")
    public Double potencia(
        @WebParam(name = "base", targetNamespace = "")
        double base,
        @WebParam(name = "exponente", targetNamespace = "")
        double exponente);

}
